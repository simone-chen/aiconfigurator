# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
model_name: "QWEN3_32B"
system_name: "h200_sxm"
decode_system_name: "h200_sxm" # this is only used for disagg, we can delete if it's agg.
total_gpus: 8
serving_mode: "agg"
nextn: 0
is_moe: False
isl: 4000
osl: 1000

# agg, disagg prefill, disagg decode worker configs are per replica.
agg_worker_config:
  gemm_quant_mode: "fp8_block"
  moe_quant_mode: "fp8_block"
  kvcache_quant_mode: "float16"
  fmha_quant_mode: "float16"
  comm_quant_mode: "half"
  bs: 32
  workers: 1 # keep using 1, please don't modify
  tp: 1
  pp: 1
  dp: 1
  moe_tp: 1
  moe_ep: 1
  memory: 50 # in GB, optional, to work with aic, it will report; to use generator standalone, just delete this field.
disagg_prefill_worker_config: # this is only used for disagg, we can delete if it's agg.
  gemm_quant_mode: "fp8_block"
  moe_quant_mode: "fp8_block"
  kvcache_quant_mode: "float16"
  fmha_quant_mode: "float16"
  comm_quant_mode: "half"
  bs: 1
  workers: 2
  tp: 1
  pp: 1
  dp: 1
  moe_tp: 1
  moe_ep: 1
  memory: 50 # in GB, optional, to work with aic, it will report; to use generator standalone, just delete this field.
disagg_decode_worker_config: # this is only used for disagg, we can delete if it's agg.
  gemm_quant_mode: "fp8_block"
  moe_quant_mode: "fp8_block"
  kvcache_quant_mode: "float16"
  fmha_quant_mode: "float16"
  comm_quant_mode: "half"
  bs: 128
  workers: 3
  tp: 1
  pp: 1
  dp: 1
  moe_tp: 1
  moe_ep: 1
  memory: 50 # in GB, optional, to work with aic, it will report; to use generator standalone, just delete this field.

exp_config: # Optional, estimated perf result with specific concurrency, for aic alignment only
  ttft: 875.0 # Optional, for repro only
  tps_per_user: 25.63 # Optional, for repro only
  tps_per_gpu: 561.3 # Optional, for repro only
  concurrency_per_replica: 32 # Optional, for repro only. Default to max_batch_size * num_worker(agg worker, or disagg decode worker)
  num_requests_multiplier: 10 # 28*10 per replica. Optional, default to 10.